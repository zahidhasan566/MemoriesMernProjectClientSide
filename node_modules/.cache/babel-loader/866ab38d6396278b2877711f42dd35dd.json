{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp8\\\\htdocs\\\\practice\\\\memories project\\\\client\\\\src\\\\componenets\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './Styles';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const classes = useStyles();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags (coma separated)\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: _ref => {\n            let {\n              base64\n            } = _ref;\n            return setPostData({ ...postData,\n              selectedFile: base64\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"n0aEhw6qZSiM5TQiHpZHHW4Kl1I=\", true, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","createPost","updatePost","Form","classes","postData","setPostData","creator","title","message","tags","selectedFile","post","useSelector","state","currentId","posts","find","_id","handleSubmit","e","preventDefault","dispatch","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"sources":["C:/xampp8/htdocs/practice/memories project/client/src/componenets/Form/Form.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport useStyles from './Styles';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form= () =>{\r\n    const classes = useStyles();\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (currentId === 0) {\r\n          dispatch(createPost(postData));\r\n          clear();\r\n        } else {\r\n          dispatch(updatePost(currentId, postData));\r\n          clear();\r\n        }\r\n      };\r\n\r\n    return(\r\n        <Paper className={classes.paper}>\r\n        <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n          <Typography variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}</Typography>\r\n          <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n          <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n          <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n          <TextField name=\"tags\" variant=\"outlined\" label=\"Tags (coma separated)\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n          <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n          <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n        </form>\r\n      </Paper>\r\n    \r\n    );\r\n}\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}